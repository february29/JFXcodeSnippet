<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>IDECodeSnippetCompletionPrefix</key>
	<string>jflistvc</string>
	<key>IDECodeSnippetCompletionScopes</key>
	<array>
		<string>ClassImplementation</string>
	</array>
	<key>IDECodeSnippetContents</key>
	<string>- (void)viewDidLoad {
    [super viewDidLoad];
    self.title = @"";
    
    _dataArray  = [NSMutableArray new];
    
   
    self.mTableView.hidden = NO;
    
    [self getDataFromNetWithHUD:YES isRefresh:YES];
    
}


-(BaseTableView *)mTableView{
    
    if (!_mTableView) {
        _mTableView = [[BaseTableView alloc]initWithFrame:CGRectMake(0, 0, 0, 0)];
        _mTableView.separatorColor = [UIColor clearColor];
        _mTableView.backgroundColor = [UIColor clearColor];
        _mTableView.delegate = self;
        _mTableView.dataSource = self;
        _mTableView.tableFooterView = [UIView new];
        _mTableView.rowHeight  = UITableViewAutomaticDimension;
        _mTableView.estimatedRowHeight = 44;
        _mTableView.showsHorizontalScrollIndicator  = NO;
        _mTableView.showsVerticalScrollIndicator = NO;
        
        [self.view addSubview:_mTableView];
        
        [_mTableView mas_makeConstraints:^(MASConstraintMaker *make) {
            make.top.equalTo(self.searchView.mas_bottom);
            make.left.equalTo(self.view);
            make.right.equalTo(self.view);
            make.bottom.mas_equalTo(self.view);
            
        }];
        
        
    }
    
    return _mTableView;
    
    
}






- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{

}

- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section{
    return 1;
}

#pragma mark UITableViewDataSource delegate
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    return self.dataArray.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    static NSString *identifier = @"cell";
    PSTableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier];
    if (!cell) {
        cell = [[PSTableViewCell alloc]initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
    }
    
    //cell配置
    cell.model = self.dataArray[indexPath.row];
    
    
    
    return cell;
}



- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section{
    return [UIView new];
}



#pragma mark 网络请求

- (void)getDataFromNetWithHUD:(BOOL)showHUD isRefresh:(BOOL)isRefresh {
    
    
    
    if (showHUD) {
        [BHudView showHudInView:self.view];
    }
    if (isRefresh) {
        page = 1;
    }
    
    //    type    10011
    //    pageNumber    1
    //    zrks_id
    //    zrr_name
    //    wjlx_id
    //    wj_name
    
    
    NSString* requestURI=[[NSString alloc] initWithFormat:@"%@/%@",[SJTNetWorkingChangeHelper sharedInstance].BaseURL_1,@"hoBook/list"];
    NSMutableDictionary *parameters = [@{
                                         
                                         @"token":[UserInfor token],

                                         
                                         
                                         }mutableCopy];
    

    
    [[BNetWorkingManager sharedInstance]POST:requestURI paraments:parameters completeBlock:^(id  _Nullable responseObject, NSError * _Nullable error) {
        
        if (showHUD) {
            [BHudView hideHudInView:self.view];
        }
        
        if (responseObject) {
            if (isRefresh) {
                [self.dataArray removeAllObjects];
            }
            
            
            NSArray *array =  [PSModel mj_objectArrayWithKeyValuesArray: [[responseObject objectForKey:@"page"] objectForKey:@"list"] ];
            if (isRefresh) {
                [self.dataArray removeAllObjects];
            }
            [self.dataArray addObjectsFromArray:array];
            
            page++;
            
            
        }else{
            BMAKETOAST(@"网络异常");
        }
        
        self.mTableView.hidden = NO;
        [self.mTableView reloadData];
        [self.mTableView.mj_header endRefreshing];
        [self.mTableView.mj_footer endRefreshing];
        
        if (isRefresh) {
            //            [self.mTableView setContentOffset:CGPointMake(0, 1) animated:YES];
            
            CGPoint offset = self.mTableView.contentOffset;
            offset.y = -self.mTableView.contentInset.top;
            [self.mTableView setContentOffset:offset animated:YES];
        }
        
    }];
    
}

</string>
	<key>IDECodeSnippetIdentifier</key>
	<string>68C5EA90-5D72-499F-9648-47B4BF4B449A</string>
	<key>IDECodeSnippetLanguage</key>
	<string>Xcode.SourceCodeLanguage.Objective-C</string>
	<key>IDECodeSnippetPlatformFamily</key>
	<string>iphoneos</string>
	<key>IDECodeSnippetSummary</key>
	<string>list 及其代理</string>
	<key>IDECodeSnippetTitle</key>
	<string>list vc</string>
	<key>IDECodeSnippetUserSnippet</key>
	<true/>
	<key>IDECodeSnippetVersion</key>
	<integer>2</integer>
</dict>
</plist>
